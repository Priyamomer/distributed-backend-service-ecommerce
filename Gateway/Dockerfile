FROM openjdk:21

# Core Configs
ENV SERVER_PORT=8000
ENV SPRING_APPLICATION_NAME=Gateway
ENV SPRING_MAIN_WEB-APPLICATION-TYPE_ABCDEFG=reactive
ENV SPRING_MAIN_ALLOW-BEAN-DEFINITION-OVERRIDING=true

# Eureka
ENV EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE=http://host.docker.internal:8100/eureka
ENV EUREKA_CLIENT_REGISTER-WITH-EUREKA=true
ENV EUREKA_CLIENT_FETCH-REGISTRY=true

# Redis
ENV SPRING_DATA_REDIS_HOST=host.docker.internal
ENV SPRING_DATA_REDIS_PORT=6379

# OAuth2
ENV SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GATEWAY_PROVIDER=my-provider
ENV SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GATEWAY_CLIENT-ID=GW2
ENV SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GATEWAY_CLIENT-SECRET=GW2Secret
ENV SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GATEWAY_AUTHORIZATION-GRANT-TYPE=authorization_code
ENV SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GATEWAY_SCOPE=openid
ENV SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GATEWAY_REDIRECT-URI=http://localhost:8000/login/oauth2/code/gateway
ENV SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MY-PROVIDER_ISSUER-URI=http://host.docker.internal:8200
ENV SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MY-PROVIDER_AUTHORIZATION-URI=http://localhost:8200/oauth2/authorize
ENV SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MY-PROVIDER_TOKEN-URI=http://host.docker.internal:8200/oauth2/token

ENV EUREKA_INSTANCE_HOSTNAME host.docker.internal


# Copy the jar file
COPY target/Gateway-0.0.1-SNAPSHOT.jar gateway.jar

# Expose the port
EXPOSE 8000

# Run the application
ENTRYPOINT ["java","-jar","gateway.jar"]

